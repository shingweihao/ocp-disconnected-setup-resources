---
- name: Playbook to setup files for OCP disconnected environment
  hosts: localhost
  become: true
  gather_facts: false
  vars_files:
  - vars.yaml

  tasks:
  - name: Create temp folder
    ansible.builtin.file:
      path: "{{ dir_files }}/{{ item }}"
      state: directory
      recurse: true
      mode: 0755
    loop:
      - binaries
      - configs
      - installer
      - mirror-registry

  - name: Download OCP binaries
    ansible.builtin.get_url:
      url: "{{ item }}"
      dest: "{{ dir_files }}/binaries"
    loop:
      - https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/{{ ocp_version }}/openshift-client-linux.tar.gz
      - https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/{{ ocp_version }}/openshift-install-linux.tar.gz
      - https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/{{ ocp_version }}/oc-mirror.tar.gz
    tags:
      - download-resources
  
  - name: Untar OCP binaries
    ansible.builtin.unarchive:
      src: "{{ dir_files }}/binaries/{{ item }}"
      dest: "{{ dir_files }}/binaries"
      mode: 0755
    loop:
      - openshift-client-linux.tar.gz
      - openshift-install-linux.tar.gz
      - oc-mirror.tar.gz
    tags:
      - download-resources

  - name: Download mirror registry package
    ansible.builtin.get_url:
      url: https://mirror.openshift.com/pub/openshift-v4/clients/mirror-registry/latest/mirror-registry.tar.gz
      dest: "{{ dir_files }}/mirror-registry"
    tags:
      - download-resources

  - name: Untar mirror registry package
    ansible.builtin.unarchive:
      src: "{{ dir_files }}/mirror-registry/mirror-registry.tar.gz"
      dest: "{{ dir_files }}/mirror-registry/"
      mode: 0755
    tags:
      - download-resources

  - name: Create HAProxy config file
    ansible.builtin.template:
      src: templates/haproxy.cfg.j2
      dest: "{{ dir_files }}/configs/haproxy.cfg"
      mode: 0644

  - name: Create Keepalived master config file
    ansible.builtin.template:
      src: templates/keepalived.conf_MASTER.j2
      dest: "{{ dir_files }}/configs/keepalived.conf_MASTER"
      mode: 0644
    tags:
      - keepalived

  - name: Create Keepalived backup config file
    ansible.builtin.template:
      src: templates/keepalived.conf_BACKUP.j2
      dest: "{{ dir_files }}/configs/keepalived.conf_BACKUP"
      mode: 0644
    tags:
      - keepalived      

  - name: Create local repo file
    ansible.builtin.template:
      src: templates/local.repo.j2
      dest: "{{ dir_files }}/configs/local.repo"
      mode: 0644

  - name: Encode mirror registry credentials to base64 format
    ansible.builtin.set_fact:
      mirror_reg_creds: "{{ (mirror_reg_user + ':' + mirror_reg_pwd) | b64encode }}"
      
  - name: Create dockerconfigjson file
    ansible.builtin.template:
      src: templates/dockerconfig.json.j2
      dest: "{{ dir_files }}/configs/config.json"
      mode: 0644

  - name: Un-parse dockerconfigjson contents
    ansible.builtin.command: jq -c '.' "{{ dir_files }}/configs/config.json"
    register: dockerconfig_unparsed

  - name: Register unparsed dockerconfigjson into variable
    ansible.builtin.set_fact:
      pull_secret: "{{ dockerconfig_unparsed.stdout }}"

  - name: Create install-config.yaml file
    ansible.builtin.template:
      src: templates/install-config.yaml.j2
      dest: "{{ dir_files }}/installer/install-config.yaml"

  - name: Setting ocp_version_minor channel to process imageset-config file
    ansible.builtin.set_fact:
      ocp_version_channel: "{{ ocp_version.split('.')[0] }}.{{ ocp_version.split('.')[1] }}"
    tags:
      - mirroring

  - name: Create imageset-config.yaml file
    ansible.builtin.template:
      src: templates/imageset-config.yaml.j2
      dest: "{{ dir_files }}/mirror-registry/imageset-config.yaml"
    tags:
      - mirroring

  - name: Begin the mirroring process
    ansible.builtin.command: oc-mirror --config="{{ dir_files }}/mirror-registry/imageset-config.yaml" file://"{{ dir_files }}/mirror-registry/"
    tags:
      - mirroring
 
  - name: Setting ocp_version_minor variable to process MC file on butane
    ansible.builtin.set_fact:
      ocp_version_minor: "{{ ocp_version.split('.')[0] }}.{{ ocp_version.split('.')[1] }}.0"
    tags:
      - ntp_machineconfig

  - name: Create master chrony MC file
    ansible.builtin.template:
      src: templates/chrony-mc-master.j2
      dest: "{{ dir_files }}/configs/99-master-chrony-conf.bu"
      mode: 0644
    tags:
      - ntp_machineconfig      
  
  - name: Create worker chrony MC file
    ansible.builtin.template:
      src: templates/chrony-mc-worker.j2
      dest: "{{ dir_files }}/configs/99-worker-chrony-conf.bu"
      mode: 0644
    tags:
      - ntp_machineconfig  

  - name: Convert master chrony MC file into YAML format
    ansible.builtin.command: butane "{{ dir_files }}/configs/99-master-chrony-conf.bu" -o "{{ dir_files }}/configs/99-master-chrony-conf.yaml"
    tags:
      - ntp_machineconfig      

  - name: Convert worker chrony MC file into butane format
    ansible.builtin.command: butane "{{ dir_files }}/configs/99-worker-chrony-conf.bu" -o "{{ dir_files }}/configs/99-worker-chrony-conf.yaml"
    tags:
      - ntp_machineconfig

  - name: Create infra MCP file
    ansible.builtin.copy:
      src: templates/mcp-infra.yaml
      dest: "{{ dir_files }}/configs/mcp-infra.yaml"
      mode: 0644

  - name: Removing redundant files
    ansible.builtin.file:
      path: "{{ dir_files }}/{{ item }}"
      state: absent
    loop:
      - binaries/oc-mirror.tar.gz
      - binaries/openshift-client-linux.tar.gz
      - binaries/openshift-install-linux.tar.gz
      - binaries/README.md
      - configs/99-master-chrony-conf.bu
      - configs/99-worker-chrony-conf.bu
      - mirror-registry/mirror-registry.tar.gz

  - name: Get current date and time
    ansible.builtin.command: "date +'%d%b%H%M'"
    register: timestamp

  - name: Compress contents into tarball
    community.general.archive:
      path: "{{ dir_files }}/*"
      dest: "{{ dir_save_tarball }}/ocpfiles-{{ timestamp.stdout }}.tar.gz"

  - name: Cleanup dir_files directory
    ansible.builtin.file:
      path: "{{ dir_files }}/"
      state: absent